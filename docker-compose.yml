version: '3.4'

networks:
  frontend:
  backend:

services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1448:1433"
    container_name: jewelssqlserver
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1449:1433"
    container_name: jewelstokensqlserver
    networks:
      - backend

  catalog:
    image: jewels/catalogapi
    build:
      context: .\ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      Externalbaseurl: http://localhost:7000
      DatabaseServer: mssqlserver
      DatabaseName: CatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "7000:80"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: jewels/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalog
      IdentityUrl: http://192.168.1.102:7800
      CallBackUrl: http://localhost:7500
    ports:
      - "7500:80"
    container_name: webshop
    networks:
      - frontend
    depends_on:
      - catalog
      - tokenserver

  tokenserver:
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    image: jewels/tokenapi
    volumes:
      - C:\Users\KalAcademy\AppData\Roaming\microsoft\UserSecrets\:/root/.microsoft/usersecrets
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: 7801
      MvcClient: http://localhost:7500
      BasketApiClient: http://localhost:7510
      OrderApiClient: http://localhost:7520
    ports:
      - "7800:80"
      - "7801:443"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver
